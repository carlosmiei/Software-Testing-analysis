/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 04 16:43:08 GMT 2018
 */

package ats;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import java.util.HashMap;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CompanyTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Company company0 = new Company("%wL(1(", "%wL(1(");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Point2D.Double point2D_Double1 = new Point2D.Double(2985, 2985);
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip(2985, point2D_Double0, point2D_Double1, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "HQx+F^WG!F5vL/T ", "%wL(1(", "3<`ZR4bfQ +Y", 2985, 0.0, point2D_Double0, (-196.53663524), 2985, 2985.0);
      company0.addTrip(trip0);
      assertEquals((-4221), company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.printVehicles();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("", 390.3467718084645, point2D_Double0, "h");
      company0.addVehicle(helicopter0);
      String string0 = company0.pickVehicle(point2D_Double0);
      assertEquals(0, company0.getPoints());
      assertNotNull(string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("", "", "", "R&\"&\"nSvIck9cH?-6sI", localDate0, 0, "R&\"&\"nSvIck9cH?-6sI");
      company0.addDriver(driver0);
      String string0 = company0.pickDriver();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      Clock clock0 = MockClock.systemDefaultZone();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Double double0 = new Double(373.641048);
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip(1789, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, double0, localDate0, (String) null, "", "", 1789, 373.641048, point2D_Double0, (-216.00981), 0.0, 0.0);
      company0.addTrip(trip0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals(373.641048, company0.getMoneyGenerated(), 0.01);
      assertEquals(373, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Company company0 = new Company("b/$\u0005g&*jVp3&0", "Ad2xdvl.V2CBub");
      Period period0 = Period.of((-1416), 1073741824, (-1416));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) (-1416.0), localDate0, "\nN\u00FAmero de viagens : ", (String) null, "b/$\u0005g&*jVp3&0", (-1416), 0.0, point2D_Double0, 75.0, 3437.475, 0.0);
      company0.addTrip(trip0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals((-1416.0), company0.getMoneyGenerated(), 0.01);
      assertEquals((-1416), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Company company0 = new Company((String) null, "DaD");
      Point2D.Double point2D_Double0 = new Point2D.Double(1449.6158, 1449.6158);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(3, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, (String) null, (String) null, "bIXbB]3", 3, 1449.6158, point2D_Double0, (-1.0), 0.0, 0.0);
      company0.addTrip(trip0);
      company0.getTotalTrips();
      assertEquals(1449.6158, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Company company0 = new Company("b/$\u0005g&*jVp3&0", "b/$\u0005g&*jVp3&0");
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) (-1416.0), (Double) 558.89818757, localDate0, "\nN\u00FAmero de viagens : ", (String) null, "b/$\u0005g&*jVp3&0", (-1416), 0, point2D_Double0, (-1416), (-1416), 558.89818757);
      company0.addTrip(trip0);
      int int0 = company0.getPoints();
      assertEquals(558.89818757, company0.getMoneyGenerated(), 0.01);
      assertEquals(558, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Company company0 = new Company("J%knk``.0mIDvoE]", (String) null);
      company0.getPassword();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getPassword();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Company company0 = new Company((String) null, "\nDinheiro gerado : ");
      company0.getName();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Company company0 = new Company(";<]^", "*'e|)q+G92rgyi,?");
      company0.getName();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      Clock clock0 = MockClock.systemDefaultZone();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Double double0 = new Double(373.641048);
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip(1789, point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, double0, localDate0, (String) null, "", "", 1789, 373.641048, point2D_Double0, (-216.00981), 0.0, 0.0);
      company0.addTrip(trip0);
      double double1 = company0.getMoneyGenerated();
      assertEquals(373.641048, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Company company0 = new Company("U", "U");
      Company company1 = new Company("Company", "U");
      Company company2 = new Company(company1);
      company0.equals(company2);
      assertEquals(0, company2.getPoints());
      assertEquals(0.0, company1.getMoneyGenerated(), 0.01);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Company company0 = new Company((String) null, "DaD");
      Point2D.Double point2D_Double0 = new Point2D.Double(1449.6158, 1449.6158);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(3, point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) point2D_Double0.x, localDate0, (String) null, (String) null, "bIXbB]3", 3, 1449.6158, point2D_Double0, (-1.0), 0.0, 0.0);
      company0.addTrip(trip0);
      company0.clone();
      assertEquals(1449, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Company company0 = new Company("b/$\u0005g&*jVp3&0", "b/$\u0005g&*jVp3&0");
      Period period0 = Period.ofDays((-1416));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) (-1416.0), localDate0, "\nN\u00FAmero de viagens : ", (String) null, "b/$\u0005g&*jVp3&0", (-1416), 0, point2D_Double0, (-1416), (-1416), (-1416.0));
      company0.addTrip(trip0);
      company0.clone();
      assertEquals((-1416), company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Company company0 = new Company("\nN\u00FAmero de viagens : ", "\nDinheiro gerado : ");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.moneyGeneratedBetween((LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.chrono.ChronoLocalDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Company company0 = new Company("jlrNjhO#byZ2SIunj", "jlrNjhO#byZ2SIunj");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.getTrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      //   verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Company company0 = new Company((String) null, (String) null);
      // Undeclared exception!
      try { 
        company0.equals(company0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Company company0 = new Company("XJu8pP9]><KX&L", "");
      // Undeclared exception!
      try { 
        company0.addVehicle((Vehicle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      //   verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Company company0 = new Company("MlX&T]TurFj3", "Trip");
      // Undeclared exception!
      try { 
        company0.addTrip((Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
     //    verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Company company0 = new Company(";<]^", "*'e|)q+G92rgyi,?");
      // Undeclared exception!
      try { 
        company0.addDriver((Driver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
       //  verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Company company0 = new Company("r8?mp", "r8?mp");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      Company company1 = null;
      try {
        company1 = new Company(company0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
     //    verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", 0.0, point2D_Double0, (String) null);
      company0.addVehicle(bike0);
      String string0 = company0.printVehicles();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals("null\n", string0);
      assertNotNull(string0);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Company company0 = new Company("", "");
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Boolean boolean0 = Boolean.valueOf("");
      ArrayList<Trip> arrayList0 = company0.getTrips();
      Driver driver0 = new Driver("", "eP 57FC@$>>(", "eP 57FC@$>>(", "eP 57FC@$>>(", localDate0, (-693.28151), 2.0, boolean0, (-693.28151), arrayList0, (-1824), (-1.0), (-1.0), "$8zA", "eP 57FC@$>>(", (-693.28151));
      company0.addDriver(driver0);
      String string0 = company0.printDrivers();
      assertEquals("null\n", string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.printDrivers();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Company company0 = new Company("%wL(1(", "%wL(1(");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip(2985, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "HQx+F^WG!F5vL/T ", "%wL(1(", "3<`ZR4bfQ +Y", 2985, 0.0, point2D_Double0, (-196.53663524), 2985, 2985.0);
      company0.addTrip(trip0);
      company0.getTrips();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", 0.0, point2D_Double0, (String) null);
      company0.addVehicle(bike0);
      company0.getVehicles();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getVehicles();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(6536L);
      Driver driver0 = new Driver((String) null, "X_vo", "Company", "", localDate0, 1.0, "");
      company0.addDriver(driver0);
      company0.getDrivers();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      company0.getDrivers();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getName();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      int int0 = company0.getPoints();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      double double0 = company0.getMoneyGenerated();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      company0.getPassword();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      Clock clock0 = MockClock.systemDefaultZone();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip(1789, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, (String) null, "", "", 1789, 373.641048, point2D_Double0, (-216.00981), 0.0, 0.0);
      company0.addTrip(trip0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals(0, int0);
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals(0, company0.getPoints());
      assertEquals(0, int0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Company company0 = new Company((String) null, "DaD");
      Point2D.Double point2D_Double0 = new Point2D.Double(1449.6158, 1449.6158);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(3, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, (String) null, (String) null, "bIXbB]3", 3, 1449.6158, point2D_Double0, (-1.0), 0.0, 0.0);
      company0.addTrip(trip0);
      company0.addTrip(trip0);
      company0.getDates();
      assertEquals(2899.2316, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      company0.getDates();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Company company0 = new Company("v=RWzQ@I2Q$`", "v=RWzQ@I2Q$`");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("v=RWzQ@I2Q$`", 391.101673, point2D_Double0, "v=RWzQ@I2Q$`");
      company0.addVehicle(helicopter0);
      String string0 = company0.pickVehicle(point2D_Double0);
      assertEquals(0, company0.getPoints());
      assertNotNull(string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      company0.pickVehicle(point2D_Double0);
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Company company0 = new Company("m:", "m:");
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("m:", "m:", "m:", "m:", localDate0, 0, "m:");
      company0.addDriver(driver0);
      String string0 = company0.pickDriver();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Company company0 = new Company("Company", "Company");
      company0.pickDriver();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Company company0 = new Company("m:", "m:");
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("m:", "m:", "m:", "m:", localDate0, 0, "m:");
      company0.addDriver(driver0);
      boolean boolean0 = company0.availiableTaxis();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Company company0 = new Company("v=RWzQ@I2Q$`", "v=RWzQ@I2Q$`");
      boolean boolean0 = company0.availiableTaxis();
      assertFalse(boolean0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Company company0 = new Company("v=RWzQ@I2Q$`", "v=RWzQ@I2Q$`");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("v=RWzQ@I2Q$`", 391.101673, point2D_Double0, "v=RWzQ@I2Q$`");
      company0.addVehicle(helicopter0);
      String string0 = company0.toString();
      assertEquals(0, company0.getPoints());
      assertEquals("Empresa v=RWzQ@I2Q$`\n---Condutores \nnull\n---Ve\u00EDculos \nnullv=RWzQ@I2Q$`\n\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Company company0 = new Company("m:", "m:");
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("m:", "m:", "m:", "m:", localDate0, 0, "m:");
      company0.addDriver(driver0);
      Company company1 = company0.clone();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company1.getPoints());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Company company0 = new Company("", "");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
        // verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Company company0 = new Company("m:", "m:");
      company0.getTotalTrips();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.equals(company0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  
    }

    @Test(timeout = 4000)
    public void test50()  throws Throwable  {
        Company company0 = new Company("teste", "ola");
        company0.equals(company0);
        assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
        assertEquals(0, company0.getPoints());
    
      }
    @Test(timeout = 4000)
    public void test51()  throws Throwable  {
        Company company0 = new Company("teste", "ola");
        company0.equals(company0);
        assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
        assertEquals(0, company0.getPoints());

    }

    @Test(timeout = 4000)
    public void test52()  throws Throwable  {
       // Point2D.Double x2 = new Point2D.Double(5, 8);
        Point2D.Double x = new Point2D.Double(500, 800);
        Point2D.Double x2 = new Point2D.Double(5, 8);
        Auxiliar aux = new Auxiliar();
        UMeR umer = new UMeR();
        Driver d1 = aux.getDriver();
        boolean comp = umer.registerCompany("taxiC","123");

        boolean user = umer.registerUser(d1, d1.getCompany());
        Vehicle v = new Car("1", 0.5, x, "taxiC");
        Vehicle v2 = new Car("2", 0.5, x2, "taxiC");
        boolean reg = umer.registerCompanyVehicle("taxiC",v);
        boolean reg3 = umer.registerCompanyVehicle("taxiC",v2);

        HashMap<String,Company> lista = umer.getCompanies();
        assertEquals(1,lista.size());

        Company c = lista.get("taxiC");

        String vei = c.pickVehicle(x2);
        HashMap<String,Vehicle> carros = c.getVehicles();

        System.out.println("HEIIIIIIIIIIIIIIIIIII" + vei);
        assertEquals(2,carros.size());
        //if (vei == null) fail();

    }


}
