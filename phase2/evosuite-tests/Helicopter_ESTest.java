/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 22:13:13 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Helicopter_ESTest extends Helicopter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter((String) null, 0.0, point2D_Double0, ")\nData : ");
      Helicopter helicopter1 = helicopter0.clone();
      assertEquals(8.5, helicopter1.getPrice(), 0.01);
      assertEquals(110.0, helicopter1.getSpeed(), 0.01);
      assertEquals(8.5, helicopter0.getPrice(), 0.01);
      assertEquals(3, helicopter0.getSeats());
      assertEquals(3, helicopter1.getSeats());
      assertEquals(110.0, helicopter0.getSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("x", (-2105.06), point2D_Double0, "x");
      Helicopter helicopter1 = helicopter0.clone();
      assertEquals(3, helicopter0.getSeats());
      assertEquals(110.0, helicopter0.getSpeed(), 0.01);
      assertEquals(110.0, helicopter1.getSpeed(), 0.01);
      assertEquals(8.5, helicopter1.getPrice(), 0.01);
      assertEquals(3, helicopter1.getSeats());
      assertEquals(8.5, helicopter0.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0, 1.0);
      Helicopter helicopter0 = new Helicopter("a(%yd|v_O+*$i'WiK", 1.0, point2D_Double0, "");
      Trip trip0 = new Trip();
      helicopter0.addTrip(trip0);
      // Undeclared exception!
      try { 
        helicopter0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Helicopter helicopter0 = null;
      try {
        helicopter0 = new Helicopter("", 110.0, (Point2D.Double) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vehicle", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Helicopter helicopter0 = null;
      try {
        helicopter0 = new Helicopter((Helicopter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Helicopter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0, 1.0);
      Helicopter helicopter0 = new Helicopter("a(%yd|v_O+*$i'WiK", 1.0, point2D_Double0, "");
      Helicopter helicopter1 = new Helicopter(helicopter0);
      assertEquals(3, helicopter1.getSeats());
      assertEquals(8.5, helicopter0.getPrice(), 0.01);
      assertEquals(110.0, helicopter1.getSpeed(), 0.01);
      assertEquals(3, helicopter0.getSeats());
      assertEquals(8.5, helicopter1.getPrice(), 0.01);
      assertEquals(110.0, helicopter0.getSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Helicopter helicopter0 = null;
      try {
        helicopter0 = new Helicopter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0, 1.0);
      Helicopter helicopter0 = new Helicopter("a(%yd|v_O+*$i'WiK", 1.0, point2D_Double0, "");
      Helicopter helicopter1 = helicopter0.clone();
      assertEquals(110.0, helicopter1.getSpeed(), 0.01);
      assertEquals(8.5, helicopter1.getPrice(), 0.01);
      assertEquals(3, helicopter1.getSeats());
      assertEquals(110.0, helicopter0.getSpeed(), 0.01);
      assertEquals(8.5, helicopter0.getPrice(), 0.01);
      assertEquals(3, helicopter0.getSeats());
  }
}
