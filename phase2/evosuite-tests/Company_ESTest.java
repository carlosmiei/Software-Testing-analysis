/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 22:16:03 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Company_ESTest extends Company_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Company company0 = new Company((String) null, (String) null);
      Point2D.Double point2D_Double0 = new Point2D.Double((-2104), (-2104));
      Point2D.Double point2D_Double1 = new Point2D.Double();
      Period period0 = Period.of((-594), 2092, (-983));
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      Trip trip0 = new Trip((-2104), point2D_Double0, point2D_Double1, (Double) 0.0, (Double) (-2104.0), localDate0, (String) null, (String) null, "M]cOOFn", 1077, (-544.7547), point2D_Double1, (-3120.680082), (-2104), 0.0);
      company0.addTrip(trip0);
      assertEquals((-5079), company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.printVehicles();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.printDrivers();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Company company0 = new Company("", "\nMorada : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Van van0 = new Van("", 655.8, point2D_Double0, "");
      company0.addVehicle(van0);
      String string0 = company0.pickVehicle(point2D_Double0);
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Company company0 = new Company("QP^xbFyrQb", (String) null);
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("QP^xbFyrQb", "QP^xbFyrQb", (String) null, (String) null, localDate0, 968.5216071749551, "\nN\u00FAmero de viagens : ");
      company0.addDriver(driver0);
      String string0 = company0.pickDriver();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertNotNull(string0);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Driver driver0 = new Driver((String) null, (String) null, "", "-i<uJ", localDate0, 2307.5462852234, "w9q%");
      driver0.setEmail("");
      company0.addDriver(driver0);
      String string0 = company0.pickDriver();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Company company0 = new Company("yS'%RzO!i[1mJfzoo8", "yS'%RzO!i[1mJfzoo8");
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip((-601), point2D_Double0, point2D_Double0, (Double) (-1040.172161565322), (Double) (-1040.172161565322), localDate0, "0nfEH/", (String) null, "Company", 0, 2348.4, point2D_Double0, (-551.0), (-601), (-1.0));
      company0.addTrip(trip0);
      int int0 = company0.moneyGeneratedBetween(localDate0, localDate0);
      assertEquals((-1040), company0.getPoints());
      assertEquals((-1040), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Company company0 = new Company("\nTrip id : ", "\nTrip id : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Trip trip0 = new Trip(2109, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.y, localDate0, "\nN\u00FAmero de classifica\u00E7\u00F5es : ", "!|Aik=Z", "", 2109, (-1.0), point2D_Double0, (-653.6106240011), (-1028.6560731896132), 0);
      company0.addTrip(trip0);
      company0.getTrips();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Company company0 = new Company("Empresa \nN\u00FAmero de viagens : \n---Condutores \nnull\n---Ve\u00EDculos \nnull\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", "");
      Point2D.Double point2D_Double0 = new Point2D.Double((-1400.203279), (-1400.203279));
      LocalDate localDate0 = MockLocalDate.ofYearDay(3160, 2);
      Trip trip0 = new Trip(3160, point2D_Double0, point2D_Double0, (Double) (-1400.203279), (Double) (-1400.203279), localDate0, "m<e{)P{U<;{m-`r", "Driver", (String) null, 0, 0, point2D_Double0, 135.0, 0, (-1400.203279));
      company0.addTrip(trip0);
      company0.getTotalTrips();
      assertEquals((-1400), company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Company company0 = new Company("yS'%RzO!i[1mJfzoo8", "yS'%RzO!i[1mJfzoo8");
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip((-601), point2D_Double0, point2D_Double0, (Double) (-1040.172161565322), (Double) (-1040.172161565322), localDate0, "0nfEH/", (String) null, "Company", 0, 2348.4, point2D_Double0, (-551.0), (-601), (-1.0));
      company0.addTrip(trip0);
      int int0 = company0.getPoints();
      assertEquals((-1040), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Company company0 = new Company((String) null, (String) null);
      company0.getPassword();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getPassword();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Company company0 = new Company((String) null, "ovy+\"}Rz>=K?&jbw");
      company0.getName();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Company company0 = new Company("yS'%RzO!i[1mJfzoo8", "yS'%RzO!i[1mJfzoo8");
      company0.getName();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double((-992.1), 569.103392);
      Period period0 = Period.ofWeeks((-1134));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Trip trip0 = new Trip((-1134), point2D_Double0, point2D_Double0, (Double) 569.103392, (Double) 569.103392, localDate0, ")\nPontos : ", ")\nPontos : ", "E", (-1134), (-518.101111971), point2D_Double0, 760.11, (-1402.54686219561), 760.11);
      company0.addTrip(trip0);
      double double0 = company0.getMoneyGenerated();
      assertEquals(569.103392, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Company company0 = new Company("Empresa \nN\u00FAmero de viagens : \n---Condutores \nnull\n---Ve\u00EDculos \nnull\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", "");
      Point2D.Double point2D_Double0 = new Point2D.Double((-1400.203279), (-1400.203279));
      LocalDate localDate0 = MockLocalDate.ofYearDay(3160, 2);
      Trip trip0 = new Trip(3160, point2D_Double0, point2D_Double0, (Double) (-1400.203279), (Double) (-1400.203279), localDate0, "m<e{)P{U<;{m-`r", "Driver", (String) null, 0, 0, point2D_Double0, 135.0, 0, (-1400.203279));
      company0.addTrip(trip0);
      double double0 = company0.getMoneyGenerated();
      assertEquals((-1400.203279), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getDrivers();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Company company0 = new Company("11>AR==Iy?(j4z", "11>AR==Iy?(j4z");
      Company company1 = new Company("6R!%Z", "6R!%Z");
      company0.equals(company1);
      assertEquals(0.0, company1.getMoneyGenerated(), 0.01);
      assertEquals(0, company1.getPoints());
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Company company0 = new Company("Empresa \nN\u00FAmero de viagens : \n---Condutores \nnull\n---Ve\u00EDculos \nnull\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", "");
      Point2D.Double point2D_Double0 = new Point2D.Double((-1400.203279), (-1400.203279));
      LocalDate localDate0 = MockLocalDate.ofYearDay(3160, 2);
      Trip trip0 = new Trip(3160, point2D_Double0, point2D_Double0, (Double) (-1400.203279), (Double) (-1400.203279), localDate0, "m<e{)P{U<;{m-`r", "Driver", (String) null, 0, 0, point2D_Double0, 135.0, 0, (-1400.203279));
      company0.addTrip(trip0);
      company0.clone();
      assertEquals((-1400.203279), company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Company company0 = new Company("\n---]-----\nFila de Espera : \n", "\n---]-----\nFila de Espera : \n");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.moneyGeneratedBetween((LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.chrono.ChronoLocalDate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Company company0 = new Company("", "ekrZT");
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = new Boolean(false);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      arrayList0.add((Trip) null);
      Driver driver0 = new Driver("", "", "", "", localDate0, (-1.0), (-1.0), boolean0, 0.0, arrayList0, (-402), (-1.0), 0.0, "ekrZT", "", 0.0);
      company0.addDriver(driver0);
      // Undeclared exception!
      try { 
        company0.getDrivers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Company company0 = new Company("\n---Condutores \n", "\n---Condutores \n");
      // Undeclared exception!
      try { 
        company0.equals((Company) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Company company0 = new Company("", "");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Company company0 = new Company("pg", "pg");
      // Undeclared exception!
      try { 
        company0.addVehicle((Vehicle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Company company0 = new Company("", "\nDinheiro gerado : ");
      // Undeclared exception!
      try { 
        company0.addTrip((Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Company company0 = new Company("G8R-Hq9s/9jTE", "");
      // Undeclared exception!
      try { 
        company0.addDriver((Driver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Company company0 = null;
      try {
        company0 = new Company((Company) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Company", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Company company0 = new Company("", "7_y>(qE_");
      company0.getTrips();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Company company0 = new Company("EHA]A#", "ZB*]i4VY/=r=pFxB:");
      Trip trip0 = new Trip();
      company0.addTrip(trip0);
      // Undeclared exception!
      try { 
        company0.getTrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Company company0 = new Company("", "");
      Point2D.Double point2D_Double0 = new Point2D.Double((-1714.0), (-2470.5230971947753));
      Helicopter helicopter0 = new Helicopter("Cx]!Mo", 3264.01894, point2D_Double0, "");
      company0.addVehicle(helicopter0);
      company0.getVehicles();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getVehicles();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Company company0 = new Company("", "");
      company0.getName();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Company company0 = new Company("", "");
      int int0 = company0.getPoints();
      assertEquals(0, int0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Company company0 = new Company("", "");
      double double0 = company0.getMoneyGenerated();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Company company0 = new Company("a", "a");
      company0.getPassword();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Company company0 = new Company("Sx:zefU76LzDV:)j?", "Sx:zefU76LzDV:)j?");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.x, localDate0, "Empresa Sx:zefU76LzDV:)j?\n---Condutores \nnull\n---Ve\u00EDculos \nnull\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", (String) null, "G&`gU>JV", 0, 1.0, point2D_Double0, 0.0, 0.0, (-1580.241));
      company0.addTrip(trip0);
      LocalDate localDate1 = MockLocalDate.ofEpochDay(60L);
      int int0 = company0.moneyGeneratedBetween(localDate1, localDate1);
      assertEquals(0, int0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Company company0 = new Company("yS'%RzO!i[1mJfzoo8", "yS'%RzO!i[1mJfzoo8");
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip((-601), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, (String) null, (String) null, "Company", 0, 0.0, point2D_Double0, (-542.8118290846243), (-601), 0.0);
      company0.addTrip(trip0);
      company0.addTrip(trip0);
      ArrayList<String> arrayList0 = company0.getDates();
      assertEquals(1, arrayList0.size());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Company company0 = new Company("a", "a");
      company0.getDates();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Company company0 = new Company("1I", "1I");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Van van0 = new Van("1I", (-1471.344640851138), point2D_Double0, "11>AR==Iy?(j4z");
      company0.addVehicle(van0);
      String string0 = company0.pickVehicle(point2D_Double0);
      assertNotNull(string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Company company0 = new Company("Sx:zefU76LzDV:)j?", "Sx:zefU76LzDV:)j?");
      company0.pickVehicle((Point2D.Double) null);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Driver driver0 = new Driver((String) null, (String) null, "", "-i<uJ", localDate0, 2307.5462852234, "w9q%");
      company0.addDriver(driver0);
      company0.pickDriver();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Company company0 = new Company("Sx:zefU76LzDV:)j?", "Sx:zefU76LzDV:)j?");
      company0.pickDriver();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Driver driver0 = new Driver((String) null, (String) null, "", "-i<uJ", localDate0, 2307.5462852234, "w9q%");
      company0.addDriver(driver0);
      boolean boolean0 = company0.availiableTaxis();
      assertTrue(boolean0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Company company0 = new Company("a", "a");
      boolean boolean0 = company0.availiableTaxis();
      assertFalse(boolean0);
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Company company0 = new Company("1I", "1I");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Van van0 = new Van("1I", (-1471.344640851138), point2D_Double0, "11>AR==Iy?(j4z");
      company0.addVehicle(van0);
      String string0 = company0.printVehicles();
      assertEquals("null1I\n", string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Company company0 = new Company("yS'%RzO!i[1mJfzoo8", "yS'%RzO!i[1mJfzoo8");
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip((-601), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, (String) null, (String) null, "Company", 0, 0.0, point2D_Double0, (-542.8118290846243), (-601), 0.0);
      company0.addTrip(trip0);
      Company company1 = company0.clone();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company1.getPoints());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Company company0 = new Company("", "");
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Driver driver0 = new Driver((String) null, (String) null, "", "-i<uJ", localDate0, 2307.5462852234, "w9q%");
      company0.addDriver(driver0);
      company0.getDrivers();
      assertEquals(0, company0.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Company company0 = new Company("", "ekrZT");
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.FALSE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "", "", localDate0, (-1.0), (-1.0), boolean0, 0.0, arrayList0, (-402), (-1.0), 0.0, "ekrZT", "", 0.0);
      company0.addDriver(driver0);
      String string0 = company0.printDrivers();
      assertEquals("null\n", string0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Company company0 = new Company("Sx:zefU76LzDV:)j?", "Sx:zefU76LzDV:)j?");
      String string0 = company0.toString();
      assertEquals("Empresa Sx:zefU76LzDV:)j?\n---Condutores \nnull\n---Ve\u00EDculos \nnull\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", string0);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Company company0 = new Company("Sx:zefU76LzDV:)j?", "Sx:zefU76LzDV:)j?");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.ofYearDay(0, 1);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.y, localDate0, "Empresa Sx:zefU76LzDV:)j?\n---Condutores \nnull\n---Ve\u00EDculos \nnull\nN\u00FAmero de viagens : 0\nDinheiro gerado : 0.0\n", (String) null, "G&`gU>JV", 0, 0.0, point2D_Double0, 0.0, 0.0, (-1580.241));
      company0.addTrip(trip0);
      Period period0 = Period.ofMonths(1450);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate1 = MockIsoChronology.dateNow(isoChronology0);
      int int0 = company0.moneyGeneratedBetween(localDate1, localDate1);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, int0);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Company company0 = new Company("1I", "1I");
      company0.getTotalTrips();
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Company company0 = new Company("Sx:zefU76LzDV:)j?", "Sx:zefU76LzDV:)j?");
      company0.equals(company0);
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
      assertEquals(0, company0.getPoints());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Company company0 = new Company("1I", "1I");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Van van0 = new Van("1I", (-1471.344640851138), point2D_Double0, "11>AR==Iy?(j4z");
      company0.addVehicle(van0);
      Company company1 = company0.clone();
      assertEquals(0, company1.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Company company0 = new Company("", "");
      Company company1 = new Company(company0);
      assertEquals(0, company1.getPoints());
      assertEquals(0.0, company0.getMoneyGenerated(), 0.01);
  }
}
