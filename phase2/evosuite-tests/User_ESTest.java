/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 12 22:28:42 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class User_ESTest extends User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      Point2D.Double point2D_Double0 = new Point2D.Double((-177.03), (-177.03));
      Point2D.Double point2D_Double1 = new Point2D.Double();
      Trip trip0 = new Trip(1, point2D_Double0, point2D_Double1, (Double) (-177.03), (Double) (-177.03), localDate0, "m:", "m:", "", 1, 0.0, point2D_Double0, 0.0, 0.0, 0.0);
      driver0.addTrip(trip0);
      assertEquals((-176.03), driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(361L);
      Driver driver0 = new Driver("", "", "", "", localDate0, 361L, (String) null);
      String string0 = driver0.toString();
      assertEquals("Driver \nUtilizador - \neMail : \nPassword : \nMorada : \nData de nascimento : 1970-12-28\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : 361.0\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Point2D.Double point2D_Double0 = new Point2D.Double(1172.5530169, 1172.5530169);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("", "(d", "\nDist\u00E2ncia Total : ", "", localDate0, point2D_Double0, 1435.6444, arrayList0, (-599), (-1604.85113323), true, "}Xf(UJC");
      double double0 = client0.getTotalDistance();
      assertEquals(1435.6444, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Boolean boolean0 = Boolean.valueOf(true);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Client client0 = new Client("Q?Lk6:", "", "", "zh}2C/", localDate0, point2D_Double0, (-2749.6832800812), (ArrayList<Trip>) null, 0, 0.0, true, "Q?Lk6:");
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Driver driver0 = new Driver("", "", "", "", localDate0, (-4325.3), (-1947.1), boolean0, (-4325.3), arrayList0, (-1), (-260.5628), 3600.0, "", "", 1271.788);
      double double0 = driver0.getTotalDistance();
      assertEquals((-4325.3), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Period period0 = Period.ofDays(2);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Client client0 = new Client("_y", "\nN\u00FAmero de viagens :", "s", "", localDate0);
      String string0 = client0.getPassword();
      assertEquals("s", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      Client client0 = new Client("yln7e=", (String) null, "ua]/_BlW", "yln7e=", localDate0);
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Driver driver0 = new Driver("_!g%Es@&P<%6!f,mXG", "", "", "_!g%Es@&P<%6!f,mXG", localDate0, 0.0, 0.0, boolean0, 0.0, arrayList0, (-1920), 1376.8504861974027, (-1920), "ua]/_BlW", "L1q", 1.0);
      String string0 = driver0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(361L);
      Driver driver0 = new Driver("", "", "", "", localDate0, 361L, (String) null);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Trip trip0 = new Trip();
      arrayList0.add(trip0);
      Client client0 = new Client("", "/dy\"[CO{|", "Viagem de (", "", localDate0, point2D_Double0, 0.0, arrayList0, 777, 361L, false, "N&^?");
      int int0 = client0.getNumberOfTrips();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("ua]/_BlW", (String) null, "L1q", "L1q", localDate0, 1376.8504861974027, "_!g%Es@&P<%6!f,mXG");
      String string0 = driver0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      Client client0 = new Client("", (String) null, "ua]/_BlW", "", localDate0);
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Driver driver0 = new Driver("_!g%Es@&P<%6!f,mXG", "", "", "_!g%Es@&P<%6!f,mXG", localDate0, 0.0, 0.0, boolean0, 0.0, arrayList0, (-1920), 1376.8504861974027, (-1920), "ua]/_BlW", "L1q", 1.0);
      String string0 = driver0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Driver driver0 = new Driver("(.-{(@xb~", "\nPre\u00E7o estimado : ", ">CT,! <6[d~LI", "`FJ7WzaS1V>YeR", localDate0, 0.0, "Utilizador - >CT,! <6[d~LI\neMail : \nPassword : \nMorada : >CT,! <6[d~LI\nData de nascimento : 1970-01-01\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 1796.0\nN\u00FAmero de viagens :0\nPosi\u00E7\u00E3o : (0.0,0.0)\nPontos : -1540\nPremium : true\nFila de espera : null");
      double double0 = driver0.getMoney();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.ofHoursMinutes(0, 0);
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Boolean boolean0 = Boolean.valueOf(true);
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Client client0 = new Client("Q?Lk6:", "", "", "zh}2C/", localDate0, point2D_Double0, (-2749.6832800812), (ArrayList<Trip>) null, 0, 0.0, true, "Q?Lk6:");
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Driver driver0 = new Driver("", "", "", "", localDate0, 0, 0, boolean0, 0, arrayList0, (-1), (-260.5628), 3600.0, "", "", 1271.788);
      double double0 = driver0.getMoney();
      assertEquals((-260.5628), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("_!g%Es@&P<%6!f,mXG", "_!g%Es@&P<%6!f,mXG", "_!g%Es@&P<%6!f,mXG", "_!g%Es@&P<%6!f,mXG", localDate0);
      client0.setEmail((String) null);
      String string0 = client0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      String string0 = driver0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("_!g%Es@&P<%6!f,mXG", (String) null, "_!g%Es@&P<%6!f,mXG", (String) null, localDate0);
      String string0 = client0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\nData de nascimento : ", "O10]", "O10]", "\nData de nascimento : ", localDate0, 1.0, "O10]");
      String string0 = driver0.getAddress();
      assertEquals("\nData de nascimento : ", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      Client client0 = new Client("", (String) null, "ua]/_BlW", "", localDate0);
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Driver driver0 = new Driver("_!g%Es@&P<%6!f,mXG", "", "", "_!g%Es@&P<%6!f,mXG", localDate0, 0.0, 0.0, boolean0, 0.0, arrayList0, (-1920), 1376.8504861974027, (-1920), "ua]/_BlW", "L1q", 1.0);
      boolean boolean1 = driver0.equals((User) client0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0, 1.0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("", "4VQ>3#;h.tWsidYT#", "", ":BQC<w\"p +RZ7,", localDate0, point2D_Double0, 1.0, arrayList0, (-3618), (-3618), true, "User");
      client0.clone();
      assertEquals((-3618.0), client0.getMoney(), 0.01);
      assertEquals(1.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      Client client0 = new Client("", (String) null, "ua]/_BlW", "", localDate0);
      Point2D.Double point2D_Double0 = client0.getPosition();
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Trip trip0 = new Trip(1, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.y, localDate0, (String) null, "_!g%Es@&P<%6!f,mXG", (String) null, (-1920), 1, point2D_Double0, (-1.0), (-506.761), (-218.7451966889));
      arrayList0.add(trip0);
      Driver driver0 = new Driver("_!g%Es@&P<%6!f,mXG", "", "", "_!g%Es@&P<%6!f,mXG", localDate0, 0.0, 0.0, boolean0, 0.0, arrayList0, (-1920), 1376.8504861974027, (-1920), "ua]/_BlW", "L1q", 1.0);
      User user0 = driver0.clone();
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
      assertEquals(1, user0.getNumberOfTrips());
      assertEquals(1376.8504861974027, driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("ua]/_BlW", (String) null, "L1q", "L1q", localDate0, 1376.8504861974027, "_!g%Es@&P<%6!f,mXG");
      driver0.clone();
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      Driver driver0 = new Driver("$t6>5]j!]#+x", "$t6>5]j!]#+x", "q5waH3hh'53dmP;&oH", "_6Y Hf9m8^fsV", localDate0, (-1.0), "q5waH3hh'53dmP;&oH");
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Driver driver1 = new Driver("$t6>5]j!]#+x", "_!g%Es@&P<%6!f,mXG", "$t6>5]j!]#+x", "_6Y Hf9m8^fsV", localDate0, (-3L), (-3L), boolean0, (-2266.2507), arrayList0, 0, (-490.374110878436), (-2266.2507), "$t6>5]j!]#+x", "q5waH3hh'53dmP;&oH", (-1.0));
      driver1.clone();
      assertEquals((-3.0), driver1.getTotalDistance(), 0.01);
      assertEquals((-490.374110878436), driver1.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver("ik,", "}JArA)MgS}2@z+8B4B", "", "", localDate0, 3600.0, ",,peJD;U)");
      // Undeclared exception!
      try { 
        driver0.setBirthday((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Trip trip0 = new Trip();
      arrayList0.add(trip0);
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      // Undeclared exception!
      try { 
        driver0.getTrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      arrayList0.add((Trip) null);
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      // Undeclared exception!
      try { 
        driver0.getDates();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(21, 21);
      Client client0 = new Client("qf2jch.l@ASzZj`", "-", (String) null, "qf2jch.l@ASzZj`", localDate0);
      Driver driver0 = new Driver((String) null, "-", "~1za]EPyD(", "\nPosi\u00E7\u00E3o : (", localDate0, 0, "");
      // Undeclared exception!
      try { 
        driver0.equals((User) client0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Trip trip0 = new Trip();
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      // Undeclared exception!
      try { 
        driver0.addTrip(trip0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 0.0);
      Trip trip0 = new Trip(1, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "m:", "m:", "", 1, 0.0, point2D_Double0, 0.0, 0.0, 0.0);
      driver0.addTrip(trip0);
      ArrayList<Trip> arrayList1 = driver0.getTrips();
      assertEquals(1, arrayList1.size());
      assertEquals(1.0, driver0.getTotalDistance(), 0.01);
      assertEquals(1.0, driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf("t.)^U=*UPJo7");
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", "", "", localDate0, 2698.35713672316, 0.0, boolean0, (-1.0), arrayList0, 268, 0.0, 3026.68, "t.)^U=*UPJo7", "", (-1.0));
      String string0 = driver0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.valueOf(true);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "\nDist\u00E2ncia Total : ", "", "\nN\u00FAmero de viagens :", localDate0, 0, 0, boolean0, 0, arrayList0, 1, 2385.4, 2.0, "\nDist\u00E2ncia Total : ", "\nN\u00FAmero de viagens :", 2385.4);
      double double0 = driver0.getTotalDistance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\nGrau de cumprimento : ", "", "", "\nGrau de cumprimento : ", localDate0, (-1.0), "Oa}YvD!nmnd");
      LocalDate localDate1 = driver0.getBirthday();
      assertNotSame(localDate0, localDate1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Client client0 = new Client("?", "", (String) null, "cp", localDate0);
      String string0 = client0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("_!g%Es@&P<%6!f,mXG", (String) null, "_!g%Es@&P<%6!f,mXG", (String) null, localDate0);
      Boolean boolean0 = new Boolean("yln7e=");
      ArrayList<Trip> arrayList0 = client0.getTrips();
      Driver driver0 = new Driver("U'+6+]i^Ecnza", "}9b", "_!g%Es@&P<%6!f,mXG", "\neMail : ", localDate0, (-1.0), 2, boolean0, 2, arrayList0, 0, 3600.0, 0.0, "_!g%Es@&P<%6!f,mXG", "U'+6+]i^Ecnza", 2);
      double double0 = driver0.getMoney();
      assertEquals(3600.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("_!g%Es@&P<%6!f,mXG", "_!g%Es@&P<%6!f,mXG", "_!g%Es@&P<%6!f,mXG", "_!g%Es@&P<%6!f,mXG", localDate0);
      String string0 = client0.getEmail();
      assertEquals("_!g%Es@&P<%6!f,mXG", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\nData de nascimento : ", "O10]", "O10]", "\nData de nascimento : ", localDate0, 1.0, "O10]");
      String string0 = driver0.getName();
      assertEquals("O10]", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Trip trip0 = new Trip();
      arrayList0.add(trip0);
      arrayList0.add(trip0);
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      ArrayList<String> arrayList1 = driver0.getDates();
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      ArrayList<String> arrayList1 = driver0.getDates();
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Client client0 = new Client("", (String) null, "ua]/_BlW", "", localDate0);
      Trip trip0 = new Trip();
      client0.addTrip(trip0);
      // Undeclared exception!
      try { 
        client0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Driver driver0 = null;
      try {
        driver0 = new Driver();
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("d-%Z{0L2_5+ec~", "d-%Z{0L2_5+ec~", "d-%Z{0L2_5+ec~", "d-%Z{0L2_5+ec~", localDate0);
      client0.setBirthday(localDate0);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", localDate0, 0.0, "_!gEs@&P<%6!f,mG");
      driver0.setMoney(0.0);
      assertEquals(0.0, driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("?", "?", "?", "s", localDate0, 1, 1, boolean0, 1, arrayList0, 1, 1, 1, "s", "", 0.0);
      driver0.setAddress("s");
      assertEquals(1.0, driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", localDate0);
      int int0 = client0.getNumberOfTrips();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", localDate0, 0.0, "_!gEs@&P<%6!f,mG");
      driver0.setName("_!gEs@&P<%6!f,mG");
      assertEquals(0.0, driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", localDate0);
      Driver driver0 = new Driver("_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", localDate0, 0.0, "_!gEs@&P<%6!f,mG");
      boolean boolean0 = driver0.equals((User) client0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\nN\u00FAmero de classifica\u00E7\u00F5es : ", "\nN\u00FAmero de classifica\u00E7\u00F5es : ", "\nN\u00FAmero de classifica\u00E7\u00F5es : ", "\nN\u00FAmero de classifica\u00E7\u00F5es : ", localDate0, 797.0601779452479, "\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      driver0.setPassword("\nN\u00FAmero de classifica\u00E7\u00F5es : ");
      assertEquals("\nN\u00FAmero de classifica\u00E7\u00F5es : ", driver0.getEmail());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client("_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", "_!gEs@&P<%6!f,mG", localDate0);
      client0.setTotalDistance(0.0);
      assertEquals(0.0, client0.getTotalDistance(), 0.01);
  }
}
