/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 04 16:53:51 GMT 2018
 */

package ats;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.time.chrono.HijrahDate;
import java.time.chrono.IsoChronology;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay(4, 4);
      Driver driver0 = new Driver("&0[t1j].", "&0[t1j].", "&0[t1j].", "oS!K&Zvhoo$+Ka={", localDate0, 4.0, "&0[t1j].");
      Point2D.Double point2D_Double0 = new Point2D.Double(4, (-1447.31881855));
      Trip trip0 = new Trip(4, point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) point2D_Double0.y, localDate0, "EhM'%\"2RL", "EhM'%\"2RL", "#h87", (-2355), 0.0, point2D_Double0, 0.0, (-2881.9769203), (-2355));
      driver0.addTrip(trip0);
      assertEquals((-1447.31881855), driver0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Period period0 = Period.ZERO;
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.FALSE;
      Driver driver0 = new Driver("G@.Tk\"P_T7j", "\nDura\u00E7\u00E3o prevista : ", "\u20AC", "V^[1N1}xM!", localDate0, 0.0, "G@.Tk\"P_T7j");
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Driver driver1 = new Driver("User", "\u20AC", "User", "\nDura\u00E7\u00E3o prevista : ", localDate0, 4105.6, 0.0, boolean0, 0.0, arrayList0, (-1203), 0.0, 851.22443910983, "|Q{Won.", "lW0i/s", 0.0);
      double double0 = driver1.getTotalDistance();
      assertEquals(4105.6, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Period period0 = Period.of(20, 20, 20);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Boolean boolean0 = Boolean.valueOf("dBOz");
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("", "", (String) null, "", localDate0, (-0.09168527161832925), 0.0, boolean0, (-0.09168527161832925), arrayList0, 20, 20, 0.0, "", "KEZn;-~dx2", 20);
      double double0 = driver0.getTotalDistance();
      assertEquals((-0.09168527161832925), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Client client0 = new Client((String) null, "", (String) null, (String) null, localDate0);
      String string0 = client0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.now();
      LocalDate localDate0 = MockLocalDate.from(zonedDateTime0);
      Client client0 = new Client("b3}~KWMBD*w", "b3}~KWMBD*w", "b3}~KWMBD*w", "\nMorada : ", localDate0);
      String string0 = client0.getPassword();
      assertEquals("b3}~KWMBD*w", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Period period0 = Period.of(1475, 412, (-1));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("", "", (String) null, "XVo", localDate0, 273.261694657, "ISQ^4O5SU");
      Point2D.Double point2D_Double0 = new Point2D.Double((-363), 0.0);
      Trip trip0 = new Trip((-363), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, (String) null, "ISQ^4O5SU", (String) null, 3755, (-363), point2D_Double0, 0.0, 0.0, (-1));
      driver0.addTrip(trip0);
      driver0.getNumberOfTrips();
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Driver driver0 = new Driver((String) null, (String) null, (String) null, (String) null, localDate0, (-1.0), "b?}8E/0a'/)UnN");
      String string0 = driver0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Month month0 = Month.FEBRUARY;
      LocalDate localDate0 = MockLocalDate.of((-267), month0, 20);
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 0.0);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Client client0 = new Client("?l)!!+h>BIK@5p5;$A~", "yW0]Wb", "", "KY", localDate0, point2D_Double0, 0.0, arrayList0, 20, 0.0, true, "S<8D");
      String string0 = client0.getName();
      assertEquals("yW0]Wb", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      LocalDate localDate0 = MockLocalDate.from(hijrahDate0);
      Client client0 = new Client("\nDist\u00E2ncia Total : ", "\nDist\u00E2ncia Total : ", "\nDist\u00E2ncia Total : ", "7j+v=9zag7EH", localDate0);
      client0.setMoney(2990.0);
      double double0 = client0.getMoney();
      assertEquals(2990.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Period period0 = Period.of(1475, 412, (-1));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("", "", (String) null, "", localDate0, 273.261694657, "");
      Point2D.Double point2D_Double0 = new Point2D.Double((-363), 0.0);
      Trip trip0 = new Trip((-363), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, (String) null, (String) null, (String) null, 3755, (-363), point2D_Double0, 0.0, 0.0, (-1));
      driver0.addTrip(trip0);
      double double0 = driver0.getMoney();
      assertEquals((-363.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      Driver driver0 = new Driver((String) null, "Utilizador - ", "\nEmail cliente : ", "H]S9 3V-s~o*", localDate0, 1L, "`r yn");
      String string0 = driver0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Driver driver0 = new Driver("", "", (String) null, (String) null, localDate0, 923.787581, "");
      String string0 = driver0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Client client0 = new Client((String) null, "User", "", (String) null, localDate0);
      String string0 = client0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-815L));
      Boolean boolean0 = Boolean.valueOf("");
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("uIw5)Lwf1t1SO<bT", ")A4m~hBwbH'\"YX", ")A4m~hBwbH'\"YX", "", localDate0, (-815L), (-942.57570393362), boolean0, (-942.57570393362), arrayList0, 1802, (-477.0), (-942.57570393362), "", "", (-942.57570393362));
      String string0 = driver0.getAddress();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      LocalDate localDate0 = MockLocalDate.from(hijrahDate0);
      Driver driver0 = new Driver("", "", "", "", localDate0, 2990.0, "\nDist\u00E2ncia Total : ");
      Client client0 = new Client("\nDist\u00E2ncia Total : ", "\nDist\u00E2ncia Total : ", "\nDist\u00E2ncia Total : ", "7j+v=9zag7EH", localDate0);
      boolean boolean0 = driver0.equals((User) client0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Period period0 = Period.of(1475, 412, (-1));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("", "", (String) null, "XVo", localDate0, 273.261694657, "ISQ^4O5SU");
      Point2D.Double point2D_Double0 = new Point2D.Double((-363), 0.0);
      Point2D.Double point2D_Double1 = new Point2D.Double();
      Trip trip0 = new Trip((-363), point2D_Double0, point2D_Double1, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, (String) null, "ISQ^4O5SU", (String) null, 3755, (-363), point2D_Double1, 0.0, 0.0, (-1));
      driver0.addTrip(trip0);
      driver0.clone();
      assertEquals(726.0, driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Point2D.Double point2D_Double0 = new Point2D.Double(5779.28156, 687.1153459);
      Trip trip0 = new Trip((-1879), point2D_Double0, point2D_Double0, (Double) 5779.28156, (Double) 687.1153459, localDate0, "cr,[nFNUXqvbD0+<}", (String) null, "M~`tNOZBy'MRR", (-1879), (-1879), point2D_Double0, 0.0, 687.1153459, 2792.0353518327);
      arrayList0.add(trip0);
      Driver driver0 = new Driver("ZS)|e.&nF", "ZS)|e.&nF", "%]hwBIPM(@pg$)HR", (String) null, localDate0, (-1573.1906), 5779.28156, boolean0, 0.0, arrayList0, (-1879), 0.0, 0.0, (String) null, "t/mXU/R|3m", (-4642.22436863));
      User user0 = driver0.clone();
      assertEquals(1, user0.getNumberOfTrips());
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals((-1573.1906), driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Boolean boolean0 = Boolean.TRUE;
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Driver driver0 = new Driver("ZS)|e.&nF", "ZS)|e.&nF", "%]hwBIPM(@pg$)HR", (String) null, localDate0, (-1573.1906), 5779.28156, boolean0, 0.0, arrayList0, (-1879), 0.0, 0.0, (String) null, "t/mXU/R|3m", (-4642.22436863));
      driver0.clone();
      assertEquals(0.0, driver0.getMoney(), 0.01);
      assertEquals((-1573.1906), driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      LocalDate localDate0 = MockLocalDate.from(hijrahDate0);
      Client client0 = new Client("", "", "", "7j+v=9zag7EH", localDate0);
      client0.setMoney(2990.0);
      client0.clone();
      assertEquals(2990.0, client0.getMoney(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Period period0 = Period.of(1475, 1475, 1475);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("", "", (String) null, "", localDate0, 273.261694657, "ISQ^4O5SU");
      Point2D.Double point2D_Double0 = new Point2D.Double(1475, 1475);
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("ISQ^4O5SU", (String) null, "", "", localDate0, point2D_Double0, 1475, arrayList0, 1, 1, false, "&)m6|J~k(=L@Gvya");
      // Undeclared exception!
      try { 
        client0.setBirthday((LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
//         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Point2D.Double point2D_Double0 = new Point2D.Double(60.0, (-55.446));
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      arrayList0.add((Trip) null);
      Client client0 = new Client("C{c6-wZl/_Bg", "", ")\nPontos : ", "\nDist\u00E2ncia Total : ", localDate0, point2D_Double0, 0.0, arrayList0, 2740, (-55.446), true, (String) null);
      // Undeclared exception!
      try { 
        client0.getTrips();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
//         verifyException("User", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Period period0 = Period.ofMonths((-2679));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Driver driver0 = new Driver("", "", "", "", localDate0, 205.3966259772, "");
      driver0.setEmail((String) null);
      // Undeclared exception!
      try { 
        driver0.equals((User) driver0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(178L);
      Boolean boolean0 = Boolean.valueOf(true);
      ArrayList<Trip> arrayList0 = new ArrayList<Trip>();
      Trip trip0 = new Trip();
      arrayList0.add(trip0);
      Driver driver0 = new Driver("!?[IjD::3b%a~?,", (String) null, (String) null, "g9;5*%|K[(/EA%/i4", localDate0, 178L, (-985.09784356412), boolean0, 178L, arrayList0, 0, 178L, (-985.09784356412), (String) null, "g9;5*%|K[(/EA%/i4", 0);
      // Undeclared exception!
      try { 
        driver0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
//         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofEpochDay(1L);
      Driver driver0 = new Driver((String) null, "5'o9'ml8V<fQ", "5'o9'ml8V<fQ", (String) null, localDate0, 0.0, "5'o9'ml8V<fQ");
      Trip trip0 = new Trip();
      // Undeclared exception!
      try { 
        driver0.addTrip(trip0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
//         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("3Zg[*,KZK04-{6A", "3Zg[*,KZK04-{6A", "3Zg[*,KZK04-{6A", "\nN\u00FAmero de viagens :", localDate0, 60.0, "\nN\u00FAmero de viagens :");
      String string0 = driver0.getAddress();
      assertEquals("\nN\u00FAmero de viagens :", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("", "", "#SU+TlA<", "#SU+TlA<", localDate0, 4.0, "#SU+TlA<");
      double double0 = driver0.getTotalDistance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      LocalDate localDate0 = MockLocalDate.from(hijrahDate0);
      Driver driver0 = new Driver("", "", "", "", localDate0, 2990.0, "");
      LocalDate localDate1 = driver0.getBirthday();
      assertNotSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.of(1, 12, 12);
      Driver driver0 = new Driver("y5I%DAB;7;m<", "y5I%DAB;7;m<", "", "", localDate0, 1, "");
      String string0 = driver0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      LocalDate localDate0 = MockLocalDate.from(hijrahDate0);
      Client client0 = new Client("\nDist\u00E2ncia Total : ", "\nDist\u00E2ncia Total : ", "\nDist\u00E2ncia Total : ", "7j+v=9zag7EH", localDate0);
      double double0 = client0.getMoney();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\nFila de espera : ", "\nFila de espera : ", "\nFila de espera : ", "\nFila de espera : ", localDate0, 0.0, "\neMail : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("\nFila de espera : ", "\nFila de espera : ", "p4(w{", "\"cLaSj<6u-o;;LM*'}@", localDate0, point2D_Double0, (-1.0), arrayList0, 0, 0.0, true, "\"cLaSj<6u-o;;LM*'}@");
      String string0 = client0.getEmail();
      assertEquals("\nFila de espera : ", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Driver driver0 = new Driver("", "", (String) null, (String) null, localDate0, 923.787581, "");
      driver0.setTotalDistance(0.0);
      assertEquals(0.0, driver0.getTotalDistance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      LocalDate localDate0 = MockLocalDate.from(hijrahDate0);
      Client client0 = new Client("", "", "", "7j+v=9zag7EH", localDate0);
      String string0 = client0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", localDate0, 1469, "\naDist\u00E2ncia Total : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Trip trip0 = new Trip(1469, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", 1469, 1469, point2D_Double0, 0.0, 1469, 1469);
      driver0.addTrip(trip0);
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", localDate0, point2D_Double0, 1469, arrayList0, 1469, 1469, false, "\naDist\u00E2ncia Total : ");
      client0.addTrip(trip0);
      client0.getDates();
      assertEquals(2, client0.getNumberOfTrips());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", localDate0, 1469, "\naDist\u00E2ncia Total : ");
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ArrayList<Trip> arrayList0 = driver0.getTrips();
      Client client0 = new Client("\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", localDate0, point2D_Double0, 1469, arrayList0, 1469, 1469, false, "\naDist\u00E2ncia Total : ");
      ArrayList<String> arrayList1 = client0.getDates();
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Client client0 = null;
      try {
        client0 = new Client();
        //fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): 0
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("", "", "", "", localDate0, 2988.175099505, "");
      driver0.setBirthday(localDate0);
      assertEquals(0, driver0.getExp());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("", "", "", "", localDate0, 1, "");
      driver0.setAddress("");
      assertEquals(1.0, driver0.getTimeCompliance(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("", "", "", "", localDate0, 2988.175099505, "");
      int int0 = driver0.getNumberOfTrips();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", localDate0, 1469, "\naDist\u00E2ncia Total : ");
      driver0.setName("\naDist\u00E2ncia Total : ");
      assertEquals(0, driver0.getNumberOfReviews());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", "\naDist\u00E2ncia Total : ", localDate0, 1469, "\naDist\u00E2ncia Total : ");
      String string0 = driver0.toString();
      assertEquals("Driver \nUtilizador - \naDist\u00E2ncia Total : \neMail : \naDist\u00E2ncia Total : \nPassword : \naDist\u00E2ncia Total : \nMorada : \naDist\u00E2ncia Total : \nData de nascimento : 2014-02-14\nDist\u00E2ncia Total : 0.0\nDinheiro gasto/ganho : 0.0\nN\u00FAmero de viagens :0\nDisponibilidade : true\nClassifica\u00E7\u00E3o : 0.0\nGrau de cumprimento : 1469.0\nN\u00FAmero de classifica\u00E7\u00F5es : 0\nVe\u00EDculo : null\nDesvio total : 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      Driver driver0 = new Driver("", "", "", "", localDate0, 2988.175099505, "");
      driver0.setPassword("");
      assertEquals(0, driver0.getExp());
  }

    @Test(timeout = 4000)
    public void test41()  throws Throwable  {
        Driver driver = new Driver();



    }

    @Test(timeout = 4000)
    public void test42()  throws Throwable  {
        LocalDate l = LocalDate.now();
        Driver driver = new Driver("d1@gmail.com", "pedro", "123456", "rua do montinho", l, 0.5, "taxiC");
        Driver d = new Driver(driver);



    }


}
