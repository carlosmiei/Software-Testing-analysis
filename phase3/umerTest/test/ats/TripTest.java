/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 04 16:51:27 GMT 2018
 */

package ats;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.time.chrono.ThaiBuddhistDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TripTest  {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1.0), 447.039237372888);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(1741, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, "RUPnF?jq", "RUPnF?jq", "RUPnF?jq", 1741, 447.039237372888, point2D_Double0, 0.0, (-1.0), (-1.0));
      String string0 = trip0.toString();
      assertEquals("Viagem de (-1.0,447.039237372888) ---> (-1.0,447.039237372888)\nData : 2014-02-14\nDist\u00E2ncia : 0km\nDura\u00E7\u00E3o prevista : 447h:2m:21s\nDura\u00E7\u00E3o real : 447h:2m:21s\nPre\u00E7o : -1\u20AC\nEmail condutor : RUPnF?jq\nEmail cliente : RUPnF?jq\nMatr\u00EDcula ve\u00EDculo : RUPnF?jq\nClassifica\u00E7\u00E3o : 1741**\nPosi\u00E7\u00E3o inicial do taxi : [-1.0,447.039237372888]\nTempo previsto at\u00E9 ao cliente : 0h:0m:0s\nTempo real at\u00E9 ao cliente : -1h:0m:0s\nPre\u00E7o estimado : -1\u20AC\nTrip id : 1741", string0);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-2209), (-1.0));
      Double double0 = new Double(707.39423696);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-2209), point2D_Double0, point2D_Double0, double0, (Double) point2D_Double0.y, localDate0, "}L", "3", "LT uRp{.tH!}w", 0, 3324.92141602, point2D_Double0, (-2479.261776913), 0.0, (-2334.864188513342));
      Double double1 = trip0.getTime();
      assertEquals((-2334.864188513342), trip0.getEstimatedPrice(), 0.01);
      assertEquals((-2479.261776913), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-2209), trip0.getID());
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(707.39423696, (double)double1, 0.01);
      assertEquals(3324.92141602, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours((-1));
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Trip trip0 = new Trip(4728, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, (String) null, (String) null, ")\nData : ", 0, 0.0, point2D_Double0, 0, 0.0, (-252.5464520557));
      Double double0 = trip0.getTime();
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, (double)double0, 0.01);
      assertEquals(4728, trip0.getID());
      assertEquals((-252.5464520557), trip0.getEstimatedPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1710.846703552, (-507));
      Double double0 = new Double((-507.0));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, double0, (Double) 1710.846703552, localDate0, "p[N3$hvCj", "", "c8", 3206, 1578.56118544938, point2D_Double0, 3369.78, 0.0, 60.0);
      Double double1 = trip0.getTime();
      assertEquals(1578.56118544938, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-507.0), (double)double1, 0.01);
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals((-507), trip0.getID());
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(3206, trip0.getRating());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-2209), (-1.0));
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-2209), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, "}L", "3", "LT uRp{.tH!}w", 0, 3324.92141602, point2D_Double0, (-2479.261776913), 0.0, (-2334.864188513342));
      double double0 = trip0.getRealTimeToClient();
      assertEquals(0.0, double0, 0.01);
      assertEquals((-2334.864188513342), trip0.getEstimatedPrice(), 0.01);
      assertEquals((-2479.261776913), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(3324.92141602, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-2209), trip0.getID());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2821L));
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.y, localDate0, "[k9g=zE/(Fm=]Uvc0\"X", "Trip", "Trip", 292, 0, point2D_Double0, 0.0, 292, (-2125.477341));
      double double0 = trip0.getRealTimeToClient();
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(292.0, double0, 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getID());
      assertEquals(292, trip0.getRating());
      assertEquals((-2125.477341), trip0.getEstimatedPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Trip trip0 = new Trip();
      int int0 = trip0.getRating();
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getTime(), 0.01);
      assertEquals(0, trip0.getID());
      assertEquals(0, int0);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1022, 0.0);
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Trip trip0 = new Trip(1022, point2D_Double0, point2D_Double0, (Double) 1022.0, (Double) 1022.0, localDate0, "Wa[37%(rSm99!", "Wa[37%(rSm99!", "m:", (-893), 0.0, point2D_Double0, 1022.0, 0.0, (-1.0));
      int int0 = trip0.getRating();
      assertEquals((-893), int0);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(1022.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(1022, trip0.getID());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2821L));
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.y, localDate0, "[k9g=zE/(Fm=]Uvc0\"X", "Trip", "Trip", 292, 0, point2D_Double0, 0.0, 292, (-2125.477341));
      Double double0 = trip0.getPrice();
      assertEquals((-2125.477341), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, (double)double0, 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(292, trip0.getRating());
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(292.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0, trip0.getID());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Double double0 = new Double(904.17888);
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours((-1));
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Trip trip0 = new Trip(4728, point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, double0, localDate0, (String) null, (String) null, ")\nData : ", 0, 0.0, point2D_Double0, 0, 0.0, (-252.5464520557));
      Double double1 = trip0.getPrice();
      assertEquals(0, trip0.getRating());
      assertEquals(4728, trip0.getID());
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(904.17888, (double)double1, 0.01);
      assertEquals((-252.5464520557), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1.0), 447.039237372888);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(1741, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "RUPnF?jq", "RUPnF?jq", "RUPnF?jq", 1741, 447.039237372888, point2D_Double0, 0.0, (-1.0), (-1.0));
      trip0.getLicencePlate();
      assertEquals((-1.0), trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(1741, trip0.getRating());
      assertEquals(1741, trip0.getID());
      assertEquals(447.039237372888, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0, 0);
      LocalDate localDate0 = MockLocalDate.ofYearDay(0, 1);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) (-353.8581593436471), (Double) (-353.8581593436471), localDate0, "", "", "!HUBc1Kyhs sM", 2262, 1.0, point2D_Double0, 0.0, 0.0, (-353.8581593436471));
      trip0.getLicencePlate();
      assertEquals(0, trip0.getID());
      assertEquals((-353.8581593436471), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(2262, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(1.0, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours((-1));
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Trip trip0 = new Trip(4728, point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) point2D_Double0.x, localDate0, (String) null, (String) null, ")\nData : ", 0, 0.0, point2D_Double0, 0, 0.0, (-252.5464520557));
      int int0 = trip0.getID();
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(4728, int0);
      assertEquals((-252.5464520557), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0, 0.0);
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip((-149), point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) point2D_Double0.x, localDate0, "poG", "poG", "", 0, 0.0, point2D_Double0, 1.0, (-413.1062), 0.0);
      int int0 = trip0.getID();
      assertEquals(0, trip0.getRating());
      assertEquals(1.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-149), int0);
      assertEquals((-413.1062), trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1022, 0.0);
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Trip trip0 = new Trip(1022, point2D_Double0, point2D_Double0, (Double) 1022.0, (Double) 1022.0, localDate0, "Wa[37%(rSm99!", "Wa[37%(rSm99!", "m:", (-893), 0.0, point2D_Double0, 1022.0, 0.0, (-1.0));
      double double0 = trip0.getEstimatedTimeToDest();
      assertEquals((-893), trip0.getRating());
      assertEquals(1022.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(1022, trip0.getID());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) 0.0, localDate0, "p[N3$hvCj", "", "", (-507), (-507), point2D_Double0, 3369.78, 0.0, 60.0);
      double double0 = trip0.getEstimatedTimeToDest();
      assertEquals((-507), trip0.getRating());
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals((-507), trip0.getID());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals((-507.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0, 0);
      LocalDate localDate0 = MockLocalDate.ofYearDay(0, 1);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) (-353.8581593436471), (Double) (-353.8581593436471), localDate0, "", "", "!HUBc1Kyhs sM", 2262, 1.0, point2D_Double0, 0.0, 0.0, (-353.8581593436471));
      double double0 = trip0.getEstimatedTimeToClient();
      assertEquals((-353.8581593436471), trip0.getEstimatedPrice(), 0.01);
      assertEquals(2262, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0, trip0.getID());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, 1);
      LocalDate localDate0 = MockLocalDate.ofYearDay(1, 1);
      Trip trip0 = new Trip(1, point2D_Double0, point2D_Double0, (Double) (-634.0), (Double) (-634.0), localDate0, "jmt\":vq.E", "jmt\":vq.E", "jmt\":vq.E", 1829, 1829, point2D_Double0, (-634.0), 0.0, (-1.0));
      double double0 = trip0.getEstimatedTimeToClient();
      assertEquals(1829, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(1, trip0.getID());
      assertEquals(1829.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals((-634.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Period period0 = Period.ofYears(1);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Trip trip0 = new Trip((-1406), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) 0.0, localDate0, (String) null, "", "4(;ApoPkm/$jJN", (-663), (-1406), point2D_Double0, (-721.4), (-484.492031053), 626.20425072085);
      double double0 = trip0.getEstimatedPrice();
      assertEquals((-1406), trip0.getID());
      assertEquals((-1406.0), trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-721.4), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(626.20425072085, double0, 0.01);
      assertEquals((-663), trip0.getRating());
      assertEquals((-484.492031053), trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0, 0);
      LocalDate localDate0 = MockLocalDate.ofYearDay(0, 1);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) (-353.8581593436471), (Double) (-353.8581593436471), localDate0, "", "", "!HUBc1Kyhs sM", 2262, 1.0, point2D_Double0, 0.0, 0.0, (-353.8581593436471));
      double double0 = trip0.getEstimatedPrice();
      assertEquals(0, trip0.getID());
      assertEquals(2262, trip0.getRating());
      assertEquals(1.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals((-353.8581593436471), double0, 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours((-1));
      LocalDate localDate0 = MockLocalDate.now((ZoneId) zoneOffset0);
      Trip trip0 = new Trip(4728, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, (String) null, (String) null, ")\nData : ", 0, 0.0, point2D_Double0, 0, 0.0, (-252.5464520557));
      trip0.getDriver();
      assertEquals(0, trip0.getRating());
      assertEquals(4728, trip0.getID());
      assertEquals((-252.5464520557), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-507), (-507));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) (-507.0), localDate0, "p[N3$hvCj", "", "c8", 3206, 1578.56118544938, point2D_Double0, 3369.78, 0.0, 60.0);
      trip0.getDriver();
      assertEquals((-507), trip0.getID());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(3206, trip0.getRating());
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(1578.56118544938, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Trip trip0 = new Trip();
      trip0.getClient();
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0, trip0.getID());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getTime(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      LocalDate localDate0 = MockLocalDate.from(thaiBuddhistDate0);
      Trip trip0 = new Trip((-1), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) point2D_Double0.x, localDate0, "", "", "", (-1675), 121.86381462, point2D_Double0, (-2040.7), 0.0, (-2040.7));
      trip0.getClient();
      assertEquals((-2040.7), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-1675), trip0.getRating());
      assertEquals(121.86381462, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-1), trip0.getID());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals((-2040.7), trip0.getEstimatedPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, (-3651.46));
      Point2D.Double point2D_Double1 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double1, (Double) (-1.0), (Double) 0.0, localDate0, (String) null, "6", "6", 0, 0.0, point2D_Double1, 0.0, (-3651.46), 0.0);
      trip0.distance();
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getID());
      assertEquals((-3651.46), trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1710.846703552, (-507));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) 1710.846703552, localDate0, "p[N3$hvCj", "", "c8", 3206, 1578.56118544938, point2D_Double0, 3369.78, 3206, 60.0);
      trip0.clone();
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals((-507.0), trip0.getTime(), 0.01);
      assertEquals(1710.846703552, trip0.getPrice(), 0.01);
      assertEquals(1578.56118544938, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-507), trip0.getID());
      assertEquals(3206.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(3206, trip0.getRating());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1.0), 447.039237372888);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(1741, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "RUPnF?jq", "RUPnF?jq", "RUPnF?jq", 1741, 447.039237372888, point2D_Double0, 0.0, (-1.0), (-1.0));
      trip0.clone();
      assertEquals((-1.0), trip0.getRealTimeToClient(), 0.01);
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(447.039237372888, trip0.getPrice(), 0.01);
      assertEquals(1741, trip0.getID());
      assertEquals(1741, trip0.getRating());
      assertEquals(447.039237372888, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(447.039237372888, trip0.getTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, (-3651.46));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) (-1.0), (Double) 0.0, localDate0, (String) null, "6", "6", 0, 0.0, point2D_Double0, 0.0, (-3651.46), 0.0);
      Trip trip1 = trip0.clone();
      assertEquals(0, trip1.getRating());
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip1.getID());
      assertEquals((-1.0), trip0.getTime(), 0.01);
      assertEquals((-3651.46), trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-507), (-507));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) (-507.0), localDate0, "p[N3$hvCj", "", "c8", 3206, 1578.56118544938, point2D_Double0, 3369.78, 0.0, 60.0);
      trip0.clone();
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(1578.56118544938, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(3206, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals((-507.0), trip0.getTime(), 0.01);
      assertEquals((-507), trip0.getID());
      assertEquals((-507.0), trip0.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Trip trip0 = new Trip();
      // Undeclared exception!
      try { 
        trip0.getTaxiPos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
        // verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Trip trip0 = new Trip();
      // Undeclared exception!
      try { 
        trip0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
//         verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Trip trip0 = null;
      try {
        trip0 = new Trip((Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      //   verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = null;
      try {
        trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) 0.0, (Double) null, localDate0, "", "", "", 1, 0.0, point2D_Double0, 0.0, 745.724, 745.724);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
       //  verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1.0), 447.039237372888);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(1741, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "RUPnF?jq", "RUPnF?jq", "RUPnF?jq", 1741, 447.039237372888, point2D_Double0, 0.0, (-1.0), (-1.0));
      int int0 = trip0.getRating();
      assertEquals((-1.0), trip0.getRealTimeToClient(), 0.01);
      assertEquals(1741, int0);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(447.039237372888, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(1741, trip0.getID());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1388), (-1388));
      Period period0 = Period.ofDays(0);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Trip trip0 = new Trip((-1388), point2D_Double0, point2D_Double0, (Double) (-1388.0), (Double) point2D_Double0.y, localDate0, "\nClassifica\u00E7\u00E3o : ", "@Y~kiAlp", "\nClassifica\u00E7\u00E3o : ", 0, 0.0, point2D_Double0, 1.0, 0, (-1388.0));
      Trip trip1 = new Trip(trip0);
      assertEquals((-1388.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-1388), trip0.getID());
      assertEquals(1.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals((-1388.0), trip0.getPrice(), 0.01);
      assertEquals(0, trip1.getRating());
      assertEquals((-1388.0), trip0.getTime(), 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-507), (-507));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) (-507.0), localDate0, "p[N3$hvCj", "", "c8", 3206, 1578.56118544938, point2D_Double0, 3369.78, 0.0, 60.0);
      Double double0 = trip0.getPrice();
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals((-507), trip0.getID());
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(3206, trip0.getRating());
      assertEquals((-507.0), (double)double0, 0.01);
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(1578.56118544938, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Period period0 = Period.ofYears(1);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Trip trip0 = new Trip((-1406), point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) 0.0, localDate0, (String) null, "", "4(;ApoPkm/$jJN", (-663), (-1406), point2D_Double0, (-721.4), (-484.492031053), 626.20425072085);
      trip0.getClient();
      assertEquals((-721.4), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(626.20425072085, trip0.getEstimatedPrice(), 0.01);
      assertEquals((-1406), trip0.getID());
      assertEquals((-1406.0), trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-663), trip0.getRating());
      assertEquals((-484.492031053), trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-2209), (-1.0));
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-2209), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "}L", "3", "LT uRp{.tH!}w", 0, 3324.92141602, point2D_Double0, (-2479.261776913), 0.0, (-2334.864188513342));
      trip0.getDriver();
      assertEquals((-2209), trip0.getID());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals((-2479.261776913), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(3324.92141602, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals((-2334.864188513342), trip0.getEstimatedPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1.0), 447.039237372888);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(1741, point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, "RUPnF?jq", "RUPnF?jq", "RUPnF?jq", 1741, 447.039237372888, point2D_Double0, 0.0, (-1.0), (-1.0));
      trip0.getStart();
      assertEquals(447.039237372888, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(1741, trip0.getRating());
      assertEquals(1741, trip0.getID());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-1.0), trip0.getRealTimeToClient(), 0.01);
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-2209), (-1.0));
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-2209), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.x, localDate0, "}L", "3", "LT uRp{.tH!}w", 0, 3324.92141602, point2D_Double0, (-2479.261776913), 0.0, (-2334.864188513342));
      double double0 = trip0.getEstimatedTimeToDest();
      assertEquals(0, trip0.getRating());
      assertEquals((-2334.864188513342), trip0.getEstimatedPrice(), 0.01);
      assertEquals((-2209), trip0.getID());
      assertEquals((-2479.261776913), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(3324.92141602, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-2209), (-1.0));
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-2209), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "}L", "3", "LT uRp{.tH!}w", 0, 3324.92141602, point2D_Double0, (-2479.261776913), 0.0, (-2334.864188513342));
      trip0.getTaxiPos();
      assertEquals((-2334.864188513342), trip0.getEstimatedPrice(), 0.01);
      assertEquals((-2479.261776913), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(3324.92141602, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-2209), trip0.getID());
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1.0), 447.039237372888);
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip(1741, point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) point2D_Double0.x, localDate0, "RUPnF?jq", "RUPnF?jq", "RUPnF?jq", 1741, 447.039237372888, point2D_Double0, 0.0, (-1.0), (-1.0));
      trip0.getEnd();
      assertEquals((-1.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(447.039237372888, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(1741, trip0.getRating());
      assertEquals(1741, trip0.getID());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-1.0), trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-1388), (-1388));
      Period period0 = Period.ofDays(0);
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Trip trip0 = new Trip((-1388), point2D_Double0, point2D_Double0, (Double) (-1388.0), (Double) point2D_Double0.x, localDate0, "\nClassifica\u00E7\u00E3o : ", "@Y~kiAlp", "\nClassifica\u00E7\u00E3o : ", 0, 0.0, point2D_Double0, 1.0, 0, (-1388.0));
      double double0 = trip0.getEstimatedTimeToClient();
      assertEquals((-1388), trip0.getID());
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals((-1388.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, (-3651.46));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) (-1.0), (Double) 0.0, localDate0, (String) null, "6", "6", 0, 0.0, point2D_Double0, 0.0, (-3651.46), 0.0);
      double double0 = trip0.getEstimatedPrice();
      assertEquals((-3651.46), trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0, trip0.getID());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(0.0, (-3651.46));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip(0, point2D_Double0, point2D_Double0, (Double) (-1.0), (Double) 0.0, localDate0, (String) null, "6", "6", 0, 0.0, point2D_Double0, 0.0, (-3651.46), 0.0);
      trip0.getLicencePlate();
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0, trip0.getID());
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-3651.46), trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-507), (-507));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) (-507.0), localDate0, "p[N3$hvCj", "", "c8", 3206, 1578.56118544938, point2D_Double0, 3369.78, 0.0, 60.0);
      trip0.getDate();
      assertEquals((-507), trip0.getID());
      assertEquals(3206, trip0.getRating());
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(1578.56118544938, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double((-507), (-507));
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      Trip trip0 = new Trip((-507), point2D_Double0, point2D_Double0, (Double) point2D_Double0.x, (Double) (-507.0), localDate0, "p[N3$hvCj", "", "c8", 3206, 1578.56118544938, point2D_Double0, 3369.78, 0.0, 60.0);
      trip0.distance();
      assertEquals(60.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(1578.56118544938, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(3369.78, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-507), trip0.getID());
      assertEquals(3206, trip0.getRating());
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double(1.0, 0.0);
      Clock clock0 = MockClock.systemDefaultZone();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      Trip trip0 = new Trip((-149), point2D_Double0, point2D_Double0, (Double) point2D_Double0.y, (Double) point2D_Double0.y, localDate0, "poG", "poG", "", 0, 0.0, point2D_Double0, 1.0, (-413.1062), 0.0);
      double double0 = trip0.getRealTimeToClient();
      assertEquals(1.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-149), trip0.getID());
      assertEquals((-413.1062), double0, 0.01);
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Trip trip0 = new Trip();
      int int0 = trip0.getID();
      assertEquals(0, trip0.getRating());
      assertEquals(0.0, trip0.getTime(), 0.01);
      assertEquals(0, int0);
      assertEquals(0.0, trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals(0.0, trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getRealTimeToClient(), 0.01);
      assertEquals(0.0, trip0.getPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Trip trip0 = new Trip();
      trip0.setRating((-1));
      // Undeclared exception!
      try { 
        trip0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      //   verifyException("Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-542), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "!WV2rR", "!WV2rR", "!WV2rR", (-542), (-542), point2D_Double0, (-542), (-542), (-542));
      String string0 = trip0.toString();
      assertEquals("Viagem de (0.0,0.0) ---> (0.0,0.0)\nData : 2014-02-14\nDist\u00E2ncia : 0km\nDura\u00E7\u00E3o prevista : -542h:0m:0s\nDura\u00E7\u00E3o real : 0h:0m:0s\nPre\u00E7o : 0\u20AC\nEmail condutor : !WV2rR\nEmail cliente : !WV2rR\nMatr\u00EDcula ve\u00EDculo : !WV2rR\nClassifica\u00E7\u00E3o : -542**\nPosi\u00E7\u00E3o inicial do taxi : [0.0,0.0]\nTempo previsto at\u00E9 ao cliente : -542h:0m:0s\nTempo real at\u00E9 ao cliente : -542h:0m:0s\nPre\u00E7o estimado : -542\u20AC\nTrip id : -542", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      LocalDate localDate0 = MockLocalDate.now();
      Trip trip0 = new Trip((-542), point2D_Double0, point2D_Double0, (Double) 0.0, (Double) 0.0, localDate0, "!WV2rR", "!WV2rR", "!WV2rR", (-542), (-542), point2D_Double0, (-542), (-542), (-542));
      trip0.clone();
      assertEquals((-542.0), trip0.getEstimatedTimeToDest(), 0.01);
      assertEquals((-542), trip0.getID());
      assertEquals((-542.0), trip0.getRealTimeToClient(), 0.01);
      assertEquals((-542.0), trip0.getEstimatedTimeToClient(), 0.01);
      assertEquals((-542), trip0.getRating());
      assertEquals(0.0, trip0.getPrice(), 0.01);
      assertEquals((-542.0), trip0.getEstimatedPrice(), 0.01);
      assertEquals(0.0, trip0.getTime(), 0.01);
  }
}
